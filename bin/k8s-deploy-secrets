#!/bin/bash
# deploy-secrets

. k8s-read-config

if [ -n "${SECRETS_DEPLOYED+1}" ]
then
  echo "Secrets already deployed"
  return 0
fi

echo "Getting external secrets"
. get-secrets
echo "Done getting external secrets"

if [ -n "${EXTERNAL_SECRETS_K8S_NAME+x}" ]; then
  echo "Creating ${EXTERNAL_SECRETS_K8S_NAME}"
  KUBECTL_ARGS=""
  for i in "${EXTERNAL_SECRETS[@]}"
  do
    KUBECTL_ARGS+=" --from-literal=$i"
  done

  #shellcheck disable=SC2086
  eval kubectl create secret generic "$EXTERNAL_SECRETS_K8S_NAME" --namespace="$NAMESPACE" ${KUBECTL_ARGS} --dry-run -o yaml | kubectl apply -f -
  echo "Done creating external secrets"
fi



echo "Deploying Object Store Secrets"
#shellcheck disable=SC2153
for EXTERNAL_SECRET_FILE in "${EXTERNAL_SECRET_FILES[@]}"
do
  # Make a place to put the files
  SECRETS_PATH=$(mktemp -d)
  #shellcheck disable=SC2064
  trap "rm -rf ${SECRETS_PATH}" EXIT

  # Use the filename as the secret name
  SECRET_NAME=${EXTERNAL_SECRET_FILE##*/}
  SECRET_NAME=${SECRET_NAME%.secret.external}

  #shellcheck disable=SC2086
  OBJSTORE_URL="$(cat ${EXTERNAL_SECRET_FILE})"
  if [[ "$OBJSTORE_URL" == s3* ]]; then
    OBJSTORE_UTIL="aws s3 cp --recursive"
  else
    OBJSTORE_UTIL="gsutil rsync -r"
  fi

  ${OBJSTORE_UTIL} "${OBJSTORE_URL}" "${SECRETS_PATH}"
  kubectl create secret \
    generic "${SECRET_NAME}" \
    --from-file "${SECRETS_PATH}" \
    --dry-run -o yaml | kubectl apply "--namespace=${NAMESPACE}" -f -

  # Remove local copy
  rm -rf "${SECRETS_PATH}"
done
echo "Done deploying Object Store Secrets"
echo ""

echo "Deploying Encrypted Secrets"
#shellcheck disable=SC2153
for SOPS_SECRET_FILE in "${SOPS_SECRET_FILES[@]}"
do
  set -x
  DECRYPTED_FILE="${SOPS_SECRET_FILE}.decrypted"
  #shellcheck disable=SC2086
  sops ${SOPS_OPTIONS} --decrypt "${SOPS_SECRET_FILE}" > "${DECRYPTED_FILE}"
  kubeval "${DECRYPTED_FILE}"

  kubectl replace "--namespace=${NAMESPACE}" -f "${DECRYPTED_FILE}" ||\
    kubectl create "--namespace=${NAMESPACE}" -f "${DECRYPTED_FILE}"

  rm "${DECRYPTED_FILE}"
done
echo "Done deploying Encrypted Secrets"
echo ""

echo "Deploying Secrets"
#shellcheck disable=SC2153
for index in "${!SECRET_FILES[@]}"
do
  SECRET_FILE=${SECRET_FILES[$index]}
  echo "Applying ${SECRET_FILE}"
  kubectl apply -f "${SECRET_FILE}" --namespace="$NAMESPACE" --record
done
echo "Done deploying Secrets"
echo ""

SECRETS_DEPLOYED=1
