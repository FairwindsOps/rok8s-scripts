#!/bin/bash -e

# MODIFIED by Ross Kukulinski <ross@kukulinski.com>
# Copyright 2016 Ross Kukulinski All rights reserved

# Copyright 2014 The Kubernetes Authors All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# used to install kubectl inside the build environment plus other tools these scripts leverage.
# uncomment for troubleshooting if required
# set -xv

ROK8S_INSTALL_PATH="${ROK8S_INSTALL_PATH:-/usr/local/bin}"
mkdir -p "${ROK8S_INSTALL_PATH}"

PKG_MANAGER=$( command -v dnf || command -v yum || command -v apt-get || command -v apk || command -v brew ) || echo "Supported package manager not found"

if [[ $PKG_MANAGER = *"apk"* ]]; then
  PKG_INSTALL="${PKG_MANAGER} add"
else
  PKG_INSTALL="${PKG_MANAGER} install -y"
fi

KUBECTL_VERSION="${KUBECTL_VERSION:-v1.17.9}"
HELM_VERSION="${HELM_VERSION:-v3.2.0}"
HELM2_VERSION="${HELM2_VERSION:-v2.16.8}"
SOPS_VERSION="${SOPS_VERSION:-v3.5.0}"

# make sure sudo is installed
if ! hash sudo 2>/dev/null; then
  echo Installing sudo...
  # shellcheck disable=SC2086
  $PKG_INSTALL sudo
fi

# remove default setting of requiretty if it exists
#sed -i '/Defaults requiretty/d' /etc/sudoers

# make sure wget is installed
if ! hash wget 2>/dev/null; then
  echo Installing wget...
  # shellcheck disable=SC2086
  sudo $PKG_INSTALL wget
fi

# make sure jq is installed
if ! hash jq 2>/dev/null; then
  echo Installing jq...
  # shellcheck disable=SC2086
  sudo $PKG_INSTALL jq
fi

if ! hash pip 2>/dev/null; then
  echo Installing pip
  if [[ $PKG_MANAGER = *"apk"* ]]; then
    # shellcheck disable=SC2086
    sudo $PKG_INSTALL py-pip python-dev
  elif [[ $PKG_MANAGER = *"dnf"* ]]; then
    # shellcheck disable=SC2086
    sudo $PKG_INSTALL python-pip python-devel
  elif [[ $PKG_MANAGER = *"yum"* ]]; then
    # shellcheck disable=SC2086
    sudo $PKG_INSTALL python-pip python-devel
  elif [[ $PKG_MANAGER = *"apt"* ]]; then
    # shellcheck disable=SC2086
    sudo $PKG_INSTALL python-pip python-dev
  elif [[ $PKG_MANAGER = *"brew"* ]]; then
    # shellcheck disable=SC2086
    sudo $PKG_INSTALL python
  fi
fi

# make sure gcloud is installed
if ! hash gcloud 2>/dev/null; then
  echo Installing gcloud...
  gcloud components update --quiet || \
    curl https://dl.google.com/dl/cloudsdk/channels/rapid/install_google_cloud_sdk.bash | \
      bash -s -- --disable-prompts
  ln -s "${HOME}/google-cloud-sdk/bin/gcloud" "${ROK8S_INSTALL_PATH}/gcloud"
  ln -s "${HOME}/google-cloud-sdk/bin/docker-credential-gcloud" "${ROK8S_INSTALL_PATH}/docker-credential-gcloud"
  ln -s "${HOME}/google-cloud-sdk/bin/gsutil" "${ROK8S_INSTALL_PATH}/gsutil"
fi

# make sure awscli is installed
if ! hash aws 2>/dev/null; then
  echo Installing aws...
  pip install awscli
fi

# make sure kubectl is installed
if ! hash kubectl 2>/dev/null; then
  echo Installing kubectl...
  wget -q "https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl" -O "${ROK8S_INSTALL_PATH}/kubectl"
  chmod +x "${ROK8S_INSTALL_PATH}/kubectl"
fi

# make sure sops is installed
if ! hash sops 2>/dev/null; then
  echo Installing sops...
  curl -fsSLo "${ROK8S_INSTALL_PATH}/sops" "https://github.com/mozilla/sops/releases/download/${SOPS_VERSION}/sops-${SOPS_VERSION}.$(uname | tr '[:upper:]' '[:lower:]')"
  chmod +x "${ROK8S_INSTALL_PATH}/sops"
fi

# make sure helm 3 is installed
if ! hash helm 2>/dev/null; then
  echo Installing helm...
  mkdir "${ROK8S_INSTALL_PATH}/helm-tmp"
  curl "https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz" | tar xzvf - -C "${ROK8S_INSTALL_PATH}/helm-tmp"
  mv "${ROK8S_INSTALL_PATH}/helm-tmp/linux-amd64/helm" "${ROK8S_INSTALL_PATH}/helm"
  chmod +x "${ROK8S_INSTALL_PATH}/helm"
  rm -rf "${ROK8S_INSTALL_PATH}/helm-tmp"
fi

# make sure helm2 is installed
if ! hash helm2 2>/dev/null; then
  echo Installing helm2...
  mkdir "${ROK8S_INSTALL_PATH}/helm2-tmp"
  curl "https://get.helm.sh/helm-${HELM2_VERSION}-linux-amd64.tar.gz" | tar xzvf - -C "${ROK8S_INSTALL_PATH}/helm2-tmp"
  mv "${ROK8S_INSTALL_PATH}/helm2-tmp/linux-amd64/helm" "${ROK8S_INSTALL_PATH}/helm2"
  chmod +x "${ROK8S_INSTALL_PATH}/helm2"
  rm -rf "${ROK8S_INSTALL_PATH}/helm2-tmp"
fi

# make sure kubeval is installed
if ! hash kubeval 2>/dev/null; then
  echo Installing kubeval...
  cd "${ROK8S_INSTALL_PATH}"
  curl -L "https://github.com/garethr/kubeval/releases/download/0.7.3/kubeval-linux-amd64.tar.gz" | tar xzvf -
  echo "0582bd259fb8045562d3db3bc01ab834d8f210e7  kubeval"  | sha1sum -c -
  chmod +x "${ROK8S_INSTALL_PATH}/kubeval"
fi

# make sure aws-iam-authenticator is installed
if ! hash aws-iam-authenticator 2>/dev/null; then
  echo Installing aws-iam-authenticator...
  cd "${ROK8S_INSTALL_PATH}"
  wget -q "https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.3.0/heptio-authenticator-aws_0.3.0_linux_amd64" -O "${ROK8S_INSTALL_PATH}/aws-iam-authenticator"
  echo "1053ac315df5f1e306f62969dbf1e1308f608efd  aws-iam-authenticator" | sha1sum -c -
  chmod +x "${ROK8S_INSTALL_PATH}/aws-iam-authenticator"
fi
