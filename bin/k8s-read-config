#!/bin/bash

if [ -n "${CONFIG_READ+1}" ]
then
  echo "Config already read"
  return 0
fi
echo "Reading config"
CONFIG_READ=1

while getopts ":f:" opt; do
  case $opt in
    f)
      CONFIG_FILE=$OPTARG
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done

BASEDIR=$(pwd)
DEPLOY_TIMEOUT=${DEPLOY_TIMEOUT:-300}
BLOCKING_JOB_TIMEOUT=${BLOCKING_JOB_TIMEOUT:-300}

CONFIG=${CONFIG_FILE:-deploy/k8s-scripts.config}
if test -f $BASEDIR/$CONFIG ; then
  echo "Loading configuration from ${BASEDIR}/$CONFIG"
  . $BASEDIR/$CONFIG
else
  echo "Config file, ${BASEDIR}/$CONFIG, not found." >&2
  exit 1
fi

echo "[dockerfile]: $DOCKERFILE"
echo "[dockertag]: $DOCKERTAG"

NAMESPACE=${NAMESPACE:=default}
echo "[namespace]: $NAMESPACE"

echo "[configmaps]: ${CONFIGMAPS[@]}"
CONFIGMAP_FILES=()
for i in "${CONFIGMAPS[@]}"
do
  CONFIGMAP_FILES+=($BASEDIR/deploy/$i.configmap.yml)
done
echo "[configmap_files]: ${CONFIGMAP_FILES[@]}"

echo "[secrets]: ${SECRETS[@]}"
SECRET_FILES=()
for i in "${SECRETS[@]}"
do
  SECRET_FILES+=($BASEDIR/deploy/$i.secret.yml)
done
echo "[secret_files]: ${SECRET_FILES[@]}"

echo "[s3-secrets]: ${S3_SECRETS[@]}"

echo "[persistent volumes]: ${PERSISTENT_VOLUMES[@]}"
PERSISTENT_VOLUME_FILES=()
for i in "${PERSISTENT_VOLUMES[@]}"
do
  PERSISTENT_VOLUME_FILES+=($BASEDIR/deploy/$i.persistent_volume.yml)
done
echo "[persistent_volume_files]: ${PERSISTENT_VOLUME_FILES[@]}"

echo "[persistent volume_claims]: ${PERSISTENT_VOLUME_CLAIMS[@]}"
PERSISTENT_VOLUME_CLAIM_FILES=()
for i in "${PERSISTENT_VOLUME_CLAIMS[@]}"
do
  PERSISTENT_VOLUME_CLAIM_FILES+=($BASEDIR/deploy/$i.persistent_volume_claim.yml)
done
echo "[persistent_volume_claim_files]: ${PERSISTENT_VOLUME_CLAIM_FILES[@]}"

echo "[services]: ${SERVICES[@]}"
SERVICE_FILES=()
for i in "${SERVICES[@]}"
do
  SERVICE_FILES+=($BASEDIR/deploy/$i.service.yml)
done
echo "[service_files]: ${SERVICE_FILES[@]}"

echo "[endpoints]: ${ENDPOINTS[@]}"
ENDPOINT_FILES=()
for i in "${ENDPOINTS[@]}"
do
  ENDPOINT_FILES+=($BASEDIR/deploy/$i.endpoint.yml)
done
echo "[endpoint_files]: ${ENDPOINT_FILES[@]}"

echo "[ingresses]: ${INGRESSES[@]}"
INGRESS_FILES=()
for i in "${INGRESSES[@]}"
do
  INGRESS_FILES+=($BASEDIR/deploy/$i.ingress.yml)
done
echo "[ingress_files]: ${INGRESS_FILES[@]}"

echo "[jobs]: ${JOBS[@]}"
JOBS_FILES=()
for i in "${JOBS[@]}"
do
  JOBS_FILES+=($BASEDIR/deploy/$i.job.yml)
done
echo "[jobs_files]: ${JOBS_FILES[@]}"

echo "[deployments]: ${DEPLOYMENTS[@]}"
DEPLOYMENT_FILES=()
for i in "${DEPLOYMENTS[@]}"
do
  DEPLOYMENT_FILES+=($BASEDIR/deploy/$i.deployment.yml)
done
echo "[deployment_files]: ${DEPLOYMENT_FILES[@]}"
echo ""

echo "[blocking jobs]: ${BLOCKING_JOBS[@]}"
BLOCKING_JOBS_FILES=()
for i in "${BLOCKING_JOBS[@]}"
do
  BLOCKING_JOBS_FILES+=($BASEDIR/deploy/$i.blockingjob.yml)
done
echo "[blocking_jobs_files]: ${BLOCKING_JOBS_FILES[@]}"
echo ""
