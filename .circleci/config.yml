version: 2.1

orbs:
  orb-tools: circleci/orb-tools@9.0.0
  rok8s: fairwinds/rok8s-scripts@11
  oss-docs: fairwinds/oss-docs@0

references:
  docker_login: &docker_login
    run:
      name: Docker login
      command: docker login -u="reactiveops+circleci" -p="${REACTIVEOPS_QUAY_TOKEN}" quay.io

  load_supported_docker_bases: &load_supported_docker_bases
    run:
      name: Load all the base docker images we support from the ci-images dir
      command: echo "export SUPPORTED_DOCKER_BASES=\"$(ls ci-images)\"" >> $BASH_ENV

  docker_build: &docker_build
    run:
      name: Docker build
      command: |
        for docker_base in ${SUPPORTED_DOCKER_BASES}; do
          docker build -f ci-images/${docker_base}/Dockerfile -t quay.io/reactiveops/ci-images:$DOCKER_BASE_TAG-${docker_base} .
        done

  docker_push: &docker_push
    run:
      name: Docker push
      command: |
        if [[ "${DOCKER_BASE_TAG}" =~ ^v[0-9]+ ]]; then
          for docker_base in ${SUPPORTED_DOCKER_BASES}; do
            echo "Pushing ${docker_base}"
            docker tag quay.io/reactiveops/ci-images:{$DOCKER_BASE_TAG,$DOCKER_MAJOR_TAG}-${docker_base}
            docker tag quay.io/reactiveops/ci-images:{$DOCKER_BASE_TAG,$DOCKER_MINOR_TAG}-${docker_base}
            docker push quay.io/reactiveops/ci-images:$DOCKER_BASE_TAG-${docker_base}
            docker push quay.io/reactiveops/ci-images:$DOCKER_MAJOR_TAG-${docker_base}
            docker push quay.io/reactiveops/ci-images:$DOCKER_MINOR_TAG-${docker_base}
          done
        elif [[ "${DOCKER_BASE_TAG}" =~ ^dev- ]]; then
          for docker_base in ${SUPPORTED_DOCKER_BASES}; do
            docker push quay.io/reactiveops/ci-images:$DOCKER_BASE_TAG-${docker_base}
          done
        else
          echo "Skipping the docker push because '\$DOCKER_BASE_TAG: $DOCKER_BASE_TAG' does not start with dev- or v[0-9]+."
        fi

  build_docker_tags: &build_docker_tags
    run:
      name: Generate major & minor tags
      command: |
        echo "export DOCKER_MAJOR_TAG=$(echo ${DOCKER_BASE_TAG} | sed -r 's/^(v[0-9]+)(\.[0-9]+)(\.[0-9]+)$/\1/')" >> $BASH_ENV
        echo "export DOCKER_MINOR_TAG=$(echo ${DOCKER_BASE_TAG} | sed -r 's/^(v[0-9]+)(\.[0-9]+)(\.[0-9]+)$/\1\2/')" >> $BASH_ENV

  test_gh_pages: &test_gh_pages
    run:
      name: Make sure GitHub pages is up to date
      command: |
        make docs-index
        git diff --exit-code docs/

  install_circleci: &install_circleci
    run:
      name: Install CircleCI CLI
      command: |
        cd /tmp
        curl -LO https://github.com/CircleCI-Public/circleci-cli/releases/download/v0.1.16535/circleci-cli_0.1.16535_linux_amd64.tar.gz
        tar -zxvf circleci-cli_0.1.16535_linux_amd64.tar.gz
        mv circleci-cli_0.1.16535_linux_amd64/circleci /bin/circleci
        circleci version

jobs:
  test:
    docker:
      - image: cimg/python:3.7-node
    steps:
      - checkout
      - run: test/setup.sh
      - run: test/run.sh
      - *test_gh_pages

  build:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - *load_supported_docker_bases
      - setup_remote_docker
      - run: echo 'export DOCKER_BASE_TAG=dev-$CIRCLE_SHA1' >> $BASH_ENV
      - oss-docs/install-tools
      - rok8s/get_vault_env:
          vault_path: repo/global/env
      - *docker_login
      - *docker_build
      - *docker_push

  release:
    docker:
      - image: cimg/node:16.15
    steps:
      - checkout
      - *load_supported_docker_bases
      - setup_remote_docker
      - run: echo 'export GITHUB_ORGANIZATION=$CIRCLE_PROJECT_USERNAME' >> $BASH_ENV
      - run: echo 'export GITHUB_REPOSITORY=$CIRCLE_PROJECT_REPONAME' >> $BASH_ENV
      - run: echo 'export DOCKER_BASE_TAG=$CIRCLE_TAG' >> $BASH_ENV
      - oss-docs/install-tools
      - rok8s/get_vault_env:
          vault_path: repo/global/env
      - *build_docker_tags
      - *docker_login
      - *docker_build
      - *docker_push

  publish-dev-orb:
    working_directory: /go/src/github.com/fairwindsops/rok8s-scripts
    docker:
      - image: quay.io/reactiveops/ci-images:v11-buster
    shell: /bin/bash
    steps:
      - checkout
      - oss-docs/install-tools
      - rok8s/get_vault_env:
          vault_path: repo/global/env
      - *install_circleci
      - orb-tools/pack:
          source: orb/
      - orb-tools/publish:
          orb-ref: fairwinds/rok8s-scripts@dev:${CIRCLE_BRANCH}
          token-variable: CIRCLECI_DEV_API_TOKEN

  request-orb-publish:
    docker:
      - image: ubuntu:22.10
    steps:
      - run:
          name: "Install Curl"
          command: |
            apt-get update
            apt-get install -y curl unzip sudo
      - oss-docs/install-tools
      - rok8s/get_vault_env:
          vault_path: repo/rok8s-scripts/env
      - run:
          name: "Request Orb Publish"
          command: |
            curl -X POST --data-urlencode "payload={\"text\": \"[TESTING]Please publish a new orb by checking out the tag and running release-orb.sh\"}" $SLACK_URL
workflows:
  "Docker Build and Test":
    jobs:
      - test:
          name: "Run Tests"
      - build:
          name: "Build Docker Images"
          requires:
            - "Run Tests"
  Release:
    jobs:
      - release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - rok8s/github_release:
          requires:
            - release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - oss-docs/publish-docs:
          repository: rok8s-scripts
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^.*/
  "Orb Test and Publish":
    jobs:
      - orb-tools/lint:
          name: "Lint Orb Files"
          pre-steps:
            - run:
                command: apk add git openssh
          lint-dir: orb
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - orb-tools/pack:
          name: "Pack Orb"
          source-dir: orb
          requires:
            - "Lint Orb Files"
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
      - publish-dev-orb:
          name: "Publish Dev Orb"
          requires:
            - "Pack Orb"
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /.*/
      - request-orb-publish:
          name: "Request Orb Pubslishing"
          requires:
            - "Pack Orb"
          filters:
            branches:
              #ignore: /.*/
              only: sudermanjr/install-curl
            tags:
              only: /^v.*/
